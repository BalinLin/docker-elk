input {
	beats {
		port => 5044
	}

	tcp {
		port => 5000
	}

	udp {
		port => 5000
	}
	file {
		path => ["/usr/mydata/AnalysisLog_1205_1206_edit.csv"]
		start_position => beginning
		id => "AnalysisLog_1205_1206"
		type => "AnalysisLog_1205_1206"
		sincedb_path => "/dev/null"
	}

	file {
		path => ["/usr/mydata/AnalysisLog_1121_1122_edit.csv"]
		start_position => beginning
		id => "AnalysisLog_1121_1122"
		type => "AnalysisLog_1121_1122"
		sincedb_path => "/dev/null"
	}

	file {
		path => ["/usr/mydata/ClickLog*"]
		start_position => beginning
		id => "ClickLog"
		type => "ClickLog"
		sincedb_path => "/dev/null"
	}

	file {
		path => ["/usr/mydata/Tiger*"]
		start_position => beginning
		id => "TigerSharkFishStatisticsLog"
		type => "TigerSharkFishStatisticsLog"
		sincedb_path => "/dev/null"
	}

	file {
		path => ["/usr/mydata/odoo.log"]
		start_position => beginning
		id => "odoo"
		type => "odoo"
		sincedb_path => "/dev/null"
	}
}

filter {
	if [type] == "AnalysisLog_1205_1206"{
		grok {
			match => [
					"message", "%{DATA:BQDate},%{NUMBER:EventTime},%{NUMBER:UserID},%{NUMBER:EventID},%{NUMBER:VipLv},%{NUMBER:GameLv},%{NUMBER:EndCoinBalance},%{NUMBER:EndGemBalance},%{NUMBER:GameID},%{DATA:PublishVer},%{DATA:SysVer},%{DATA:Device},%{NUMBER:DevMem},%{DATA:UDID},%{DATA:IDFA},%{DATA:AAID},%{DATA:Resolution},%{DATA:IP},%{DATA:Channel},%{DATA:App_lang},%{DATA:Email},%{DATA:BetPerSpin},%{DATA:Param1},%{GREEDYDATA:Param2}"
					]
		}

		date {
			id => "AnalysisLogTime_1205_1206"
			match => ["EventTime", "UNIX"]
			timezone => "Asia/Taipei"
			target => "EventTimestamp"
			tag_on_failure => ["_dateparsefailure"]
		}

		translate {
			field => "[UserID]"
			destination => "[@metadata][attribute]"
			dictionary_path => "/usr/mydata/AnalysisAttributeLogLookupTable_1205_1206.csv"
			fallback => "Unknown,Unknown"
			refresh_interval => 300
		}
		
		csv {
			source => "[@metadata][attribute]"
			columns => ["Country","InstallSource"]
			separator => ","
		}
	}

	if [type] == "AnalysisLog_1121_1122"{
		grok {
			match => [
					"message", "%{DATA:BQDate},%{NUMBER:EventTime},%{NUMBER:UserID},%{NUMBER:EventID},%{NUMBER:VipLv},%{NUMBER:GameLv},%{NUMBER:EndCoinBalance},%{NUMBER:EndGemBalance},%{NUMBER:GameID},%{DATA:PublishVer},%{DATA:SysVer},%{DATA:Device},%{NUMBER:DevMem},%{DATA:UDID},%{DATA:IDFA},%{DATA:AAID},%{DATA:Resolution},%{DATA:IP},%{DATA:Channel},%{DATA:App_lang},%{DATA:Email},%{DATA:BetPerSpin},%{DATA:Param1},%{GREEDYDATA:Param2}"
					]
		}

		date {
			id => "AnalysisLogTime_1121_1122"
			match => ["EventTime", "UNIX"]
			timezone => "Asia/Taipei"
			target => "EventTimestamp"
			tag_on_failure => ["_dateparsefailure"]
		}

		translate {
			field => "[UserID]"
			destination => "[@metadata][attribute]"
			dictionary_path => "/usr/mydata/AnalysisAttributeLogLookupTable_1121_1122.csv"
			fallback => "Unknown,Unknown"
			refresh_interval => 300
		}
		
		csv {
			source => "[@metadata][attribute]"
			columns => ["Country","InstallSource"]
			separator => ","
		}
	}

	if [type] == "ClickLog"{
		grok {
			match => [
					"message", "%{NUMBER:EventTime:int},%{DATA:SessionID},%{DATA:UserID},%{NUMBER:ClickEventID:int},%{NUMBER:Channel:int},%{DATA:Country},%{NUMBER:LV:int},%{NUMBER:VipLV:int},%{DATA:UDID},%{NUMBER:GameID:int},%{NUMBER:CurChannel:int}"
					]
		}

		date {
			id => "ClickLogTime"
			match => ["EventTime", "UNIX"]
			timezone => "Asia/Taipei"
			target => "EventTimestamp"
			tag_on_failure => ["_dateparsefailure"]
		}
	}

	if [type] == "TigerSharkFishStatisticsLog"{
		grok {
			match => [
					"message", "%{NUMBER:StartEventTime:int},%{NUMBER:LastEventTime:int},%{NUMBER:TableTypeID:int},%{NUMBER:FishID:int},%{NUMBER:UserID:int},%{NUMBER:BetPerShoot:int},%{NUMBER:WinTimes:int},%{NUMBER:TotalWin:int},%{NUMBER:TotalBet:int},%{NUMBER:BetTimes:int},%{NUMBER:BufferAdd:int},%{NUMBER:Buffersub:int},%{NUMBER:VipLevel:int},%{NUMBER:GemWin:int},%{NUMBER:GemOdds:int}"
					]
		}

		date {
			id => "TigerSharkFishStatisticsLogTime"
			match => ["StartEventTime", "UNIX"]
			timezone => "Asia/Taipei"
			target => "StartTimestamp"
			tag_on_failure => ["_dateparsefailure"]
		}
	}

	if [type] == "odoo"{
		grok {
			match => [
					"message", "%{TIMESTAMP_ISO8601:logTimestamp} %{DATA:num} %{DATA:logType} %{DATA:Company} %{GREEDYDATA:detail} - %{NUMBER:query_count:int} %{NUMBER:query_time:float} %{NUMBER:remaining_time:float}",
					"message", "%{TIMESTAMP_ISO8601:logTimestamp} %{DATA:num} %{DATA:logType} %{DATA:Company} %{GREEDYDATA:detail}"
					]
		}

		mutate {
			add_field => { "local_time" => "%{logTimestamp}"}
			remove_field => [ "host" ]
		}

		date {
			match => ["local_time", "ISO8601"]
			timezone => "Asia/Taipei"
			target => "LogTimestamp"
		}

	}
}

output {

	if [type] == "AnalysisLog_1205_1206"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "elastic"
			password => "changeme"
			index => "analysislog-1205_1206"
		}
	}

	if [type] == "AnalysisLog_1121_1122"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "elastic"
			password => "changeme"
			index => "analysislog-1121_1122"
		}
	}
	

	if [type] == "ClickLog"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "elastic"
			password => "changeme"
			index => "clicklog-%{+yyyy.MM.dd}"
		}
	}

	if [type] == "TigerSharkFishStatisticsLog"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "elastic"
			password => "changeme"
			index => "tigersharkfishstatisticslog-%{+yyyy.MM.dd}"
		}
	}
	
	if [type] == "odoo"{
		elasticsearch {
			hosts => "elasticsearch:9200"
			user => "elastic"
			password => "changeme"
			# id => "odoo"
			index => "odoo-%{+yyyy.MM.dd}"
			document_type => "%{[@metadata][type]}"
			ecs_compatibility => disabled
		}
	}
}
